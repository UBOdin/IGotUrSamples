{"version":3,"sources":["components/CustomHeaderButton.jsx","components/Header.jsx","components/AddSamplesAliquots.jsx","components/AddSamples.jsx","components/Search.jsx","components/Row.jsx","components/CustomTable.jsx","components/ViewSamples.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomHeaderButton","state","variant","react_default","a","createElement","Button","this","size","href","props","text","Component","Header","ButtonGroup","components_CustomHeaderButton","AddSamplesAliquots","es_Row","Col","InputGroup","className","Prepend","Text","FormControl","id","Form","Control","as","multiple","AddSamples","numAliquots","showAlert","duplicateAliquots","_this","setState","save","aliquots","i","push","components_AddSamplesAliquots","key","number","isHidden","Alert","onClick","Search","type","placeholder","Append","Row","cols","numCols","Check","CustomTable","headerCols","rows","j","numRows","components_Row","Table","striped","bordered","hover","width","ViewSamples","components_Search","align","components_CustomTable","App","Navbar","Brand","Nav","Link","Container","fluid","components_Header","react_router_dom","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c7f1812.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass CustomHeaderButton extends Component {\n    state = {\n        variant: \"outline-dark\"\n    }\n\n    render() {\n        return (\n            <Button variant={this.state.variant} size=\"lg\" href={this.props.href}>{this.props.text}</Button>\n        );\n    }\n}\n\nexport default CustomHeaderButton;\n","import React, { Component } from 'react';\nimport { ButtonGroup } from 'react-bootstrap';\nimport CustomHeaderButton from './CustomHeaderButton.jsx';\n\nclass Header extends Component {\n  render() {\n    return (\n        <div>\n      <ButtonGroup>\n        <CustomHeaderButton href=\"/AddSamples\" text=\"Add Samples\" />\n        <CustomHeaderButton href=\"/ViewSamples\" text=\"View Samples\" />\n        <CustomHeaderButton href=\"\" text=\"Create Shipment\" />\n        <CustomHeaderButton href=\"\" text=\"View Shipments\" />\n      </ButtonGroup>\n        <hr />\n        </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Form, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\n\nclass AddSamplesAliquots extends Component {\n  render() {\n    return (\n      <div>\n            <hr />\n            <Row>\n                <Col>\n                    <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Aliquots:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl id=\"aliquots\" />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Type:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control id=\"type\" as=\"select\" >\n                        <option>Blood</option>\n                        <option>Blood Spot</option>\n                        <option>Dust</option> \n                        <option>Hair</option>\n                        <option>Plasma</option>\n                        <option>Serum</option>\n                        <option>Soil</option>\n                        <option>Urine</option>\n                        <option>Water</option>\n                    </Form.Control>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Initial storage conditions:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control id=\"initialstorageconditions\" as=\"select\">\n                        <option>Room temperature</option>\n                        <option>4° C</option>\n                        <option>-20° C</option>\n                        <option>-80° C</option>\n                    </Form.Control>\n                    </InputGroup>\n                </Col>\n                <Col>\n                    <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Treatments:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control id=\"treatments\" as=\"select\" multiple>\n                        <option>BHT</option>\n                        <option>EDTA</option>\n                        <option>Foil Wrapping</option>\n                        <option>Heparin</option>\n                        <option>MPA</option>\n                    </Form.Control>\n                    </InputGroup>\n                    <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Other treatments:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control id=\"othertreatments\" />\n                    </InputGroup>\n                </Col>\n            </Row>\n      </div>\n    );\n  }\n     \n}\n\nexport default AddSamplesAliquots;\n\n\n","import React, { Component } from 'react';\nimport { Alert, Button, ButtonGroup, Row, Col, InputGroup, FormControl } from 'react-bootstrap';\nimport AddSamplesAliquots from './AddSamplesAliquots'\n\nclass AddSamples extends Component {\n    state = {\n        numAliquots: 1,\n        showAlert: false\n    }\n\n    render() {\n        const aliquots = [];\n\n        for (var i = 0; i < this.state.numAliquots; i++) {\n            aliquots.push(<AddSamplesAliquots key={i} number={i} aliquots='3'/>);\n        }\n\n        return (\n            <div>\n               {this.state.showAlert && \n                    <div id=\"alert-banner\" isHidden=\"true\">\n                        <Alert variant=\"success\">\n                            Samples successfully saved!\n                        </Alert>\n                   </div>\n                }\n                \n                <h3>Add samples:</h3>\n                    <Row>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"id\">ID:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"eval\">Eval:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"date\">Date:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"hb\">Hb:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"pb\">Pb:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text id=\"density\">Density:</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl />\n                            </InputGroup>\n                        </Col>\n                    </Row>\n                { aliquots }\n                <div>\n                    <ButtonGroup>\n                        <Button variant=\"dark\" size=\"lg\" onClick={this.duplicateAliquots}>\n                            Duplicate\n                        </Button>\n                        <Button variant=\"dark\" size=\"lg\" onClick={this.save}>\n                            Save\n                        </Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n        );\n    }\n\n    duplicateAliquots = () => {\n        //This may be bad practice... basically I'm doing this so the alert will disappear if you're adding new samples\n        this.setState({\n            numAliquots: this.state.numAliquots + 1,\n            showAlert: false\n        });\n    }\n\n    save = () => {\n        //TODO: Send data via POST to database\n        //TODO: Check for errors and post the right banner!\n        this.setState({\n            numAliquots: 1,\n            showAlert: true\n        });\n    }\n}\n\nexport default AddSamples;\n\n","import React, { Component } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                <InputGroup>\n                    <FormControl type=\"text\" placeholder=\"Search\"/>\n                    <InputGroup.Append>\n                        <Button variant=\"outline-dark\">Search</Button>\n                    </InputGroup.Append>\n                </InputGroup> \n                <hr />\n            </div>                   \n        )\n    };\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass Row extends Component {\n    render() {\n        const cols = [];\n\n        for (var i = 0; i < this.props.numCols; i++) {\n            cols.push(<td></td>);\n        }\n\n        return (\n            <tr>\n                <td>\n                    <Form.Check id={this.props.key} />\n                </td>\n                { cols }\n            </tr>\n        )\n    };\n}\n\nexport default Row;           \n","import React, { Component } from 'react';\nimport { Table, Form } from 'react-bootstrap';\nimport Row from './Row';\n\nclass CustomTable extends Component {\n    render() {\n        const headerCols = [];\n        const rows = [];\n\n        for (var i = 0; i < this.props.numCols; i++) {\n            headerCols.push(<th key={i} number={i}>{this.props.cols[i]}</th>);\n        }\n\n        for (var j = 0; j < this.props.numRows;j++) {\n            rows.push(<Row numCols={this.props.numCols} key={j} number={j}/>);\n        }\n\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th width=\"3%\">\n                            <Form.Check id=\"selectall\" />\n                        </th>\n                        { headerCols }\n                    </tr>\n                </thead>\n                <tbody>\n                { rows }\n                </tbody>\n            </Table>\n        )\n    };\n}\n\nexport default CustomTable;\n","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Row, Col } from 'react-bootstrap';\nimport Search from './Search';\nimport CustomTable from './CustomTable';\n\nclass ViewSamples extends Component {\n    state = {\n        //Eventually this will need to respond to number of samples in database, obviously\n        numRows: 8\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>View samples</h3>\n                <Search />\n                <Row>\n                    <Col>\n                        <ButtonGroup>\n                            <Button variant=\"dark\" size=\"lg\">Add to shipment</Button>\n                            <Button variant=\"dark\" size=\"lg\">Split</Button>\n                            <Button variant=\"dark\" size=\"lg\">Deplete</Button>\n                            <Button variant=\"dark\" size=\"lg\">Export</Button>\n                        </ButtonGroup>\n                    </Col>\n                    <Col align=\"right\">\n                        {this.state.numRows} samples\n                    </Col>\n                </Row>\n                <CustomTable numCols={5} numRows={this.state.numRows} cols={['ID','Eval','Date','Aliquots','Notes']} />\n            </div>\n        )                \n    };\n}\n\nexport default ViewSamples;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport AddSamples from './components/AddSamples';\nimport ViewSamples from './components/ViewSamples';\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            <Navbar className=\"bg-light\">\n                <Navbar.Brand className=\"mr-auto\"><h2>SAM Research Database</h2>\n                </Navbar.Brand>\n                <Nav className=\"justify-content-end\">\n                    <Nav.Link href=\"/login\">Log in</Nav.Link>\n                    <Nav.Link href=\"/help\">Help</Nav.Link>\n                </Nav>\n            </Navbar>            \n            <Container fluid=\"true\">\n            <Header />\n           <Router basename={\"/~blakecoo/sam-database\"} >\n                <div>\n                    <Route exact path=\"/\" component={AddSamples} />\n                    <Route path=\"/~blakecoo/sam-database/AddSamples\" component={AddSamples} />\n                    <Route path=\"/~blakecoo/sam-database/ViewSamples\" component={ViewSamples} />\n                </div>\n            </Router>\n            </Container>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}